import numpy as np
import mindspore as ms
from mindspore import nn, Tensor, context

class ModelPredictor:
    def __init__(self, mindir_path):
        """初始化模型"""
        try:
            context.set_context(mode=context.GRAPH_MODE, device_target="CPU")
            self.graph = ms.load(mindir_path)
            self.model = nn.GraphCell(self.graph)
            self.model.set_train(False)
            
            # 类别标签映射 (示例)
            self.class_names = {
                0: "苹果", 
                1: "香蕉",
                2: "橙子",
                # ... 添加你的所有类别
            }
            # 价格映射
            self.prices = {
                "Apple_Braeburn": 5.99,
                "Apple_Crimson_Snow": 6.99,
                "Apple_Golden_1": 5.49,
                "Apple_Golden_2": 5.49,
                "Apple_Golden_3": 5.49,
                "Apple_Granny_Smith": 5.79,
                "Apple_Pink_Lady": 6.29,
                "Apple_Red_1": 5.29,
                "Apple_Red_2": 5.29,
                "Apple_Red_3": 5.29,
                "Apple_Red_Delicious": 5.59,
                "Apple_Red_Yellow_1": 5.89,
                "Apple_Red_Yellow_2": 5.89,
                "Apricot": 8.99,
                "Avocado": 7.99,
                "Avocado_ripe": 8.49,
                "Banana": 3.49,
                "Banana_Lady_Finger": 4.99,
                "Banana_Red": 4.99,
                "Beetroot": 4.49,
                "Blueberry": 12.99,
                "Cactus_fruit": 6.99,
                "Cantaloupe_1": 6.49,
                "Cantaloupe_2": 6.49,
                "Carambula": 8.99,
                "Cauliflower": 4.99,
                "Cherry_1": 14.99,
                "Cherry_2": 14.99,
                "Cherry_Rainier": 15.99,
                "Cherry_Wax_Black": 16.99,
                "Cherry_Wax_Red": 16.99,
                "Cherry_Wax_Yellow": 16.99,
                "Chestnut": 10.99,
                "Clementine": 7.99,
                "Cocos": 12.99,
                "Corn": 4.49,
                "Corn_Husk": 3.99,
                "Cucumber_Ripe": 4.29,
                "Cucumber_Ripe_2": 4.29,
                "Dates": 11.99,
                "Eggplant": 5.99,
                "Fig": 10.99,
                "Ginger_Root": 8.99,
                "Granadilla": 9.99,
                "Grape_Blue": 7.99,
                "Grape_Pink": 8.49,
                "Grape_White": 7.49,
                "Grape_White_2": 7.49,
                "Grape_White_3": 7.49,
                "Grape_White_4": 7.49,
                "Grapefruit_Pink": 7.99,
                "Grapefruit_White": 7.99,
                "Guava": 9.99,
                "Hazelnut": 14.99,
                "Huckleberry": 15.99,
                "Kaki": 8.99,
                "Kiwi": 6.99,
                "Kohlrabi": 5.99,
                "Kumquats": 9.99,
                "Lemon": 5.99,
                "Lemon_Meyer": 7.99,
                "Limes": 6.99,
                "Lychee": 10.99,
                "Mandarine": 7.99,
                "Mango": 9.99,
                "Mango_Red": 10.99,
                "Mangostan": 14.99,
                "Maracuja": 10.99,
                "Melon_Piel_de_Sapo": 7.99,
                "Mulberry": 12.99,
                "Nectarine": 8.99,
                "Nectarine_Flat": 9.49,
                "Nut_Forest": 15.99,
                "Nut_Pecan": 16.99,
                "Onion_Red": 4.49,
                "Onion_Red_Peeled": 5.49,
                "Onion_White": 4.49,
                "Orange": 7.49,
                "Papaya": 8.99,
                "Passion_Fruit": 10.99,
                "Peach": 8.99,
                "Peach_2": 8.99,
                "Peach_Flat": 9.49,
                "Pear": 6.99,
                "Pear_2": 6.99,
                "Pear_Abate": 7.49,
                "Pear_Forelle": 7.99,
                "Pear_Kaiser": 7.99,
                "Pear_Monster": 8.49,
                "Pear_Red": 7.99,
                "Pear_Stone": 7.99,
                "Pear_Williams": 7.49,
                "Pepino": 9.99,
                "Pepper_Green": 5.99,
                "Pepper_Orange": 6.99,
                "Pepper_Red": 6.99,
                "Pepper_Yellow": 6.99,
                "Physalis": 11.99,
                "Physalis_with_Husk": 12.99,
                "Pineapple": 8.99,
                "Pineapple_Mini": 10.99,
                "Pitahaya_Red": 14.99,
                "Plum": 7.99,
                "Plum_2": 7.99,
                "Plum_3": 7.99,
                "Pomegranate": 10.99,
                "Pomelo_Sweetie": 12.99,
                "Potato_Red": 4.49,
                "Potato_Red_Wasabi": 5.99,
                "Potato_White": 4.49,
                "Quince": 9.99,
                "Rambutan": 12.99,
                "Raspberry": 13.99,
                "Redcurrant": 14.99,
                "Salak": 13.99,
                "Strawberry": 10.99,
                "Strawberry_Wedge": 11.99,
                "Tamarillo": 10.99,
                "Tangelo": 9.99,
                "Tomato_1": 5.99,
                "Tomato_2": 5.99,
                "Tomato_3": 5.99,
                "Tomato_4": 5.99,
                "Tomato_Cherry_Red": 7.99,
                "Tomato_Maroon": 8.99,
                "Tomato_Yellow": 7.99,
                "Tomato_not Ripened": 5.49,
                "Walnut": 15.99,
                "Watermelon": 6.99
            }
        except Exception as e:
            raise RuntimeError(f"模型初始化失败: {str(e)}")

    def predict(self, input_array):
        """执行预测"""
        # 定义类别名称列表（与模型输出的class_id一一对应）
        class_names = [
        "Apple_Braeburn",
        "Apple_Crimson_Snow",
        "Apple_Golden_1",
        "Apple_Golden_2",
        "Apple_Golden_3",
        "Apple_Granny_Smith",
        "Apple_Pink_Lady",
        "Apple_Red_1",
        "Apple_Red_2",
        "Apple_Red_3",
        "Apple_Red_Delicious",
        "Apple_Red_Yellow_1",
        "Apple_Red_Yellow_2",
        "Apricot",
        "Avocado",
        "Avocado_ripe",
        "Banana",
        "Banana_Lady_Finger",
        "Banana_Red",
        "Beetroot",
        "Blueberry",
        "Cactus_fruit",
        "Cantaloupe_1",
        "Cantaloupe_2",
        "Carambula",
        "Cauliflower",
        "Cherry_1",
        "Cherry_2",
        "Cherry_Rainier",
        "Cherry_Wax_Black",
        "Cherry_Wax_Red",
        "Cherry_Wax_Yellow",
        "Chestnut",
        "Clementine",
        "Cocos",
        "Corn",
        "Corn_Husk",
        "Cucumber_Ripe",
        "Cucumber_Ripe_2",
        "Dates",
        "Eggplant",
        "Fig",
        "Ginger_Root",
        "Granadilla",
        "Grape_Blue",
        "Grape_Pink",
        "Grape_White",
        "Grape_White_2",
        "Grape_White_3",
        "Grape_White_4",
        "Grapefruit_Pink",
        "Grapefruit_White",
        "Guava",
        "Hazelnut",
        "Huckleberry",
        "Kaki",
        "Kiwi",
        "Kohlrabi",
        "Kumquats",
        "Lemon",
        "Lemon_Meyer",
        "Limes",
        "Lychee",
        "Mandarine",
        "Mango",
        "Mango_Red",
        "Mangostan",
        "Maracuja",
        "Melon_Piel_de_Sapo",
        "Mulberry",
        "Nectarine",
        "Nectarine_Flat",
        "Nut_Forest",
        "Nut_Pecan",
        "Onion_Red",
        "Onion_Red_Peeled",
        "Onion_White",
        "Orange",
        "Papaya",
        "Passion_Fruit",
        "Peach",
        "Peach_2",
        "Peach_Flat",
        "Pear",
        "Pear_2",
        "Pear_Abate",
        "Pear_Forelle",
        "Pear_Kaiser",
        "Pear_Monster",
        "Pear_Red",
        "Pear_Stone",
        "Pear_Williams",
        "Pepino",
        "Pepper_Green",
        "Pepper_Orange",
        "Pepper_Red",
        "Pepper_Yellow",
        "Physalis",
        "Physalis_with_Husk",
        "Pineapple",
        "Pineapple_Mini",
        "Pitahaya_Red",
        "Plum",
        "Plum_2",
        "Plum_3",
        "Pomegranate",
        "Pomelo_Sweetie",
        "Potato_Red",
        "Potato_Red_Wasabi",
        "Potato_White",
        "Quince",
        "Rambutan",
        "Raspberry",
        "Redcurrant",
        "Salak",
        "Strawberry",
        "Strawberry_Wedge",
        "Tamarillo",
        "Tangelo",
        "Tomato_1",
        "Tomato_2",
        "Tomato_3",
        "Tomato_4",
        "Tomato_Cherry_Red",
        "Tomato_Maroon",
        "Tomato_Yellow",
        "Tomato_not Ripened",
        "Walnut",
        "Watermelon"
    ]
        
        try:
            # 转换为MindSpore Tensor
            input_tensor = Tensor(input_array.astype(np.float32))
            
            # 模型推理
            output = self.model(input_tensor)
            probabilities = output.asnumpy()[0]
            
            # 获取预测结果
            class_id = np.argmax(probabilities)
            confidence = probabilities[class_id]
            
            # 确保class_id在有效范围内
            if 0 <= class_id < len(class_names):
                class_name = class_names[class_id]
            else:
                class_name = "未知类别（ID超出范围）"
            
            # 获取价格
            price = self.prices.get(class_name, 0.0)
                
            return {
                "class_id": int(class_id),
                "class_name": class_name,
                "confidence": float(confidence),
                "all_probs": probabilities.tolist(),
                "price": price
            }
        except Exception as e:
            raise RuntimeError(f"预测失败: {str(e)}")